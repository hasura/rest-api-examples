version: '3.6'
services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-pg:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: postgrespassword
  rest-api:
    image: node:lts
    depends_on:
    - "postgres"
    restart: always
    ports:
    - "3000:3000"
    working_dir: /usr/app
    volumes:
      - ./rest-api:/usr/app
    environment:
      DEBUG: express:*
      WAIT_HOSTS: postgres:5432
      WAIT_TIMEOUT: 300
      NODE_ENV: development
      MAIN_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
    entrypoint: /bin/sh
    command: -c "yarn install && yarn build && yarn serve"
  oa2gql:
    image: node:lts
    depends_on:
    - "postgres"
    restart: always
    ports:
    - "3100:3000"
    working_dir: /usr/app
    environment:
      OPEN_API_JSON_URL: http://rest-api:3000/openapi.json
      DEBUG: preprocessing,translation,http,pubsub
    entrypoint: /bin/sh
    command: -c "npm i openapi-to-graphql-cli && ./node_modules/.bin/openapi-to-graphql $${OPEN_API_JSON_URL} -f"
  hge-rest-actions:
    image: hasura/graphql-engine:v2.8.1.cli-migrations-v3
    ports:
    - "8010:8080"
    depends_on:
    - "postgres"
    restart: always
    volumes:
      - ./hge-metadata/rest-actions/migrations:/hasura-migrations
      - ./hge-metadata/rest-actions/metadata:/hasura-metadata
    environment:
      REST_API_BASE_URL: http://rest-api:3000
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/hge_metadata_rest_actions
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      # PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: true
  hge-rest-transform:
    image: hasura/graphql-engine:v2.8.1
    ports:
    - "8020:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/hge_metadata_rest_transform
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      # PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: true
  hge-rest-schema:
    image: hasura/graphql-engine:v2.8.1.cli-migrations-v3
    ports:
    - "8030:8080"
    depends_on:
    - "postgres"
    restart: always
    volumes:
      - ./hge-metadata/rest-schema/migrations:/hasura-migrations
      - ./hge-metadata/rest-schema/metadata:/hasura-metadata
    environment:
      REMOTE_SCHEMA_URL: http://oa2gql:3000/graphql
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/hge_metadata_rest_schema
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      # PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: true
volumes:
  db_data:
